{
  "info": {
    "name": "Expense Tracker API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешную регистрацию",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Проверяем наличие email в ответе",
                  "pm.test(\"Response has email\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешный логин",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Сохраняем токены в переменные окружения",
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"access_token\", jsonData.access_token);",
                  "pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
                  "",
                  "// Проверяем наличие токенов в ответе",
                  "pm.test(\"Response has access token\", function () {",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "});",
                  "pm.test(\"Response has refresh token\", function () {",
                  "    pm.expect(jsonData).to.have.property('refresh_token');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешное обновление токенов",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Обновляем токены в переменных окружения",
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"access_token\", jsonData.access_token);",
                  "pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
                  "",
                  "// Проверяем наличие новых токенов",
                  "pm.test(\"Response has new access token\", function () {",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "});",
                  "pm.test(\"Response has new refresh token\", function () {",
                  "    pm.expect(jsonData).to.have.property('refresh_token');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/account/refresh",
              "host": ["{{base_url}}"],
              "path": ["account", "refresh"]
            }
          }
        },
        {
          "name": "Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешный выход",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Очищаем токены после выхода",
                  "pm.environment.unset(\"access_token\");",
                  "pm.environment.unset(\"refresh_token\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/account/logout",
              "host": ["{{base_url}}"],
              "path": ["account", "logout"]
            }
          }
        },
        {
          "name": "Logout All",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешный выход со всех устройств",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Очищаем все токены после выхода",
                  "pm.environment.unset(\"access_token\");",
                  "pm.environment.unset(\"refresh_token\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/account/logout-all",
              "host": ["{{base_url}}"],
              "path": ["account", "logout-all"]
            }
          }
        }
      ]
    },
    {
      "name": "Expenses",
      "item": [
        {
          "name": "Create Expense",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешное создание расхода",
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "// Сохраняем ID созданного расхода",
                  "var jsonData = pm.response.json();",
                  "pm.environment.set(\"expense_id\", jsonData.id);",
                  "",
                  "// Проверяем наличие всех полей",
                  "pm.test(\"Response has all required fields\", function () {",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('title');",
                  "    pm.expect(jsonData).to.have.property('amount');",
                  "    pm.expect(jsonData).to.have.property('category');",
                  "    pm.expect(jsonData).to.have.property('payment_method');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Groceries\",\n    \"amount\": 50.00,\n    \"category\": \"Food\",\n    \"payment_method\": \"Credit Card\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            }
          }
        },
        {
          "name": "Get All Expenses",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешное получение списка расходов",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Проверяем, что ответ - массив",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(Array.isArray(jsonData)).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/expenses",
              "host": ["{{base_url}}"],
              "path": ["expenses"]
            }
          }
        },
        {
          "name": "Get Expense by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешное получение расхода",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Проверяем, что получен правильный расход",
                  "pm.test(\"Response has correct expense ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.id).to.equal(pm.environment.get(\"expense_id\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/expenses/{{expense_id}}",
              "host": ["{{base_url}}"],
              "path": ["expenses", "{{expense_id}}"]
            }
          }
        },
        {
          "name": "Update Expense",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешное обновление",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Проверяем сообщение об успехе",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.equal(\"Expense updated successfully\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Groceries\",\n    \"amount\": 60.00,\n    \"category\": \"Food\",\n    \"payment_method\": \"Credit Card\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/expenses/{{expense_id}}",
              "host": ["{{base_url}}"],
              "path": ["expenses", "{{expense_id}}"]
            }
          }
        },
        {
          "name": "Delete Expense",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешное удаление",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Проверяем сообщение об успехе",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.equal(\"Expense deleted successfully\");",
                  "});",
                  "",
                  "// Очищаем ID расхода после удаления",
                  "pm.environment.unset(\"expense_id\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/expenses/{{expense_id}}",
              "host": ["{{base_url}}"],
              "path": ["expenses", "{{expense_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Account",
      "item": [
        {
          "name": "Get Current User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешное получение данных пользователя",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Проверяем наличие email в ответе",
                  "pm.test(\"Response has email\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/account/me",
              "host": ["{{base_url}}"],
              "path": ["account", "me"]
            }
          }
        },
        {
          "name": "Delete Account",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Проверяем успешное удаление аккаунта",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Проверяем сообщение об успехе",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.equal(\"Account deleted successfully\");",
                  "});",
                  "",
                  "// Очищаем все переменные после удаления аккаунта",
                  "pm.environment.unset(\"access_token\");",
                  "pm.environment.unset(\"refresh_token\");",
                  "pm.environment.unset(\"expense_id\");"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/account/delete",
              "host": ["{{base_url}}"],
              "path": ["account", "delete"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000"
    },
    {
      "key": "access_token",
      "value": ""
    },
    {
      "key": "refresh_token",
      "value": ""
    },
    {
      "key": "expense_id",
      "value": ""
    }
  ]
}
